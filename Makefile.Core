########################################################
# Makefile for DMD
# Uses GNU Make-specific extensions
#

########################################################
# Command settings
#

# D Compiler
DC = dmd

# Remove command
RM = del

########################################################
# コンパイルするソースファイルのあるディレクトリ
#
#   ワイルドカード (*) も使えます。
#   この例では、カレントディレクトリにある、すべてのD言語
#   ソースファイルをコンパイルします。
#
SRCDIR = .\Freamwork

########################################################
# ライブラリの出力ディレクトリ
#

# ライブラリ出力ディレクトリ
LIBDIR = .\lib

########################################################
# Build target
#

# ターゲットファイル
TARGET = $(LIBDIR)\Xanadu.Core.lib

########################################################
# dmd コンパイルオプションの設定
#

# 追加のインクルードパス
DFLAGS =

# リリース時のコンパイルオプション
DFLAGS += -O -release -inline

# デバッグ時のコンパイルオプション
#DFLAGS += -g -d -debug -unittest -w

########################################################
# リンカオプションの設定
#

# 追加のライブラリ
#
#   kernel32.lib と user32.lib, phobos.lib, snn.lib 以外は
#   自動でリンクされないので、ここで追加してください。
#
LFLAGS = 

# GUI アプリケーションをコンパイルする際のリンカオプション
#
#   真っ黒なコマンドプロンプトが出てきてイヤーンな人は、
#   以下のコメントを外してください。
#
#LFLAGS += -L/exet:nt/su:windows:4.0

########################################################
# コンパイルするソースファイルのあるディレクトリ
#
#   ワイルドカード (*) も使えます。
#   この例では、カレントディレクトリにある、すべてのD言語
#   ソースファイルをコンパイルします。
#
IMPORT = .\Freamwork

########################################################
# ソースファイル
#
SRC := $(SRCDIR)\Xanadu\Core.d      \
       $(SRCDIR)\Xanadu\Anything.d

# dmd のリンカが '/' を通さないので、'\' に変換
OBJ := $(subst /,\,$(SRC:.d=.obj))

########################################################
# サフィックスルール
#

# *.d ファイルから *.obj ファイルを生成 (コンパイル)
.SUFFIXES: .d .obj

.d.obj:
	$(DC) -c -of$@ $(DFLAGS) -I$(IMPORT) $<

########################################################
# make ビルドルール
#

# all (default target)
.PHONY: all
all: $(TARGET)

# clean: 生成したすべてのターゲット (*.obj, *.map, *.exe) を削除
.PHONY: clean
clean:
	-$(RM) $(TARGET)
	-$(RM) $(OBJ)

# ターゲットファイル: *.exe ファイルのビルド
$(TARGET): $(OBJ)
	$(DC) -lib -of$@ $(DFLAGS) $(LFLAGS) $^